using BasicSearchApp.Entities;
using System;
using System.Collections.Concurrent;
using System.Collections.Generic;

namespace BasicSearchApp.data.Context

{
    /// <summary>
    /// Created 5/8/2020
    /// Author - David Merck
    /// 
    /// This represents the psuedo persitent storage for the app
    /// The DbContext is seeded from the Global.asax.cs using database.cs in Infrastucture
    /// This can and should be persisted in a database
    /// TODO - Persist data in DB
    /// </summary>
    public static class DbContext
    {
        /// <summary>
        /// This is the search index for the resources forlder
        /// It is generated by the indexing service through the indexing controller
        /// 
        /// Each entry under a word represents a sighting of that word
        /// Example of index entry:
        /// 
        /// "right": [
        ///      {
        ///          "patientId": 1000001,
        ///          "documentId": 2000002,
        ///          "lineIndex": 29,
        ///          "wordIndex": 12,
        ///          "lineLength": 13
        ///     },
        ///        {
        ///          "patientId": 1000001,
        ///          "documentId": 2000002,
        ///          "lineIndex": 77,
        ///          "wordIndex": 0,
        ///          "lineLength": 1
        ///     }
        /// ]
        /// </summary>
        public static ConcurrentDictionary<string, List<dynamic>> Index = new ConcurrentDictionary<string, List<dynamic>>();

        private static object theLocker = new object();

        /// <summary>
        /// Persistent Storage of Patient Entities
        /// </summary>
        public static IList<Patient> patients = new List<Patient>();
        public static IList<Patient> Patients
        {
            get
            {
                lock (theLocker)
                {
                    return patients;
                }
            }
            set
            {
                lock (theLocker)
                {
                    patients = value;
                }
            }
        }

        /// <summary>
        /// Persistent Storage of Document Entities
        /// </summary>
        public static IList<Document> documents = new List<Document>();
        public static IList<Document> Documents
        {
            get
            {
                lock (theLocker)
                {
                    return documents;
                }
            }
            set
            {
                lock (theLocker)
                {
                    documents = value;
                }
            }
        }

    }
}
